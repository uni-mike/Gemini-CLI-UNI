/**
 * Status Command - Show system and trio status
 */

import { SlashCommand, SlashCommandResult, MessageType } from './types.js';

export const statusCommand: SlashCommand = {
  name: 'status',
  altNames: ['stat', 'info'],
  description: 'Show system and trio status',
  action: async (context): Promise<SlashCommandResult> => {
    const statusMessage = `
ðŸŽ­ UNIPATH CLI Trio System Status

ðŸŽ¯ Planner Status:
  â€¢ Task analysis: âœ… Active
  â€¢ AI-powered tool selection: âœ… Ready
  â€¢ Multi-step decomposition: âœ… Available

âš¡ Executor Status:
  â€¢ Advanced tool registry: âœ… ${context.config?.toolCount || 13} tools loaded
  â€¢ Auto-discovery: âœ… 7 advanced tools discovered
  â€¢ Parameter mapping: âœ… Dynamic
  â€¢ Error recovery: âœ… Active

ðŸŽ­ Orchestrator Status:
  â€¢ Trio communication: âœ… Bidirectional
  â€¢ AI mediation: âœ… Active
  â€¢ Recovery strategies: âœ… Ready
  â€¢ Tool awareness: âœ… Enhanced

ðŸ“Š Session Stats:
  â€¢ Prompts processed: ${context.session.stats.promptCount}
  â€¢ Tokens used: ${context.session.stats.tokensUsed.toLocaleString()}
  â€¢ Session duration: ${Math.floor((Date.now() - context.session.startTime.getTime()) / 1000)}s

ðŸ”§ Tool Categories Available:
  â€¢ File Operations: read_file, write_file, smart_edit
  â€¢ System Operations: bash, ls, glob
  â€¢ Search Operations: rg (ripgrep), grep
  â€¢ Memory Operations: memory
  â€¢ Version Control: git
  â€¢ Web Operations: web

All systems operational! ðŸš€
`;

    context.ui.addItem({
      type: MessageType.INFO,
      content: statusMessage.trim(),
      timestamp: new Date(),
    });

    return {
      type: 'info',
    };
  },
};